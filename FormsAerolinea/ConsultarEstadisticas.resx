<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>